namespace = lotr_teardown_events

lotr_teardown_events.1 = {
	type = province_event
	title = "OK"
	desc = "OK"
	hidden = yes
	trigger = {
		exists = owner 
		OR = {
			this = p:1141
			this = p:1021
			this = p:1030
			this = p:1105
			this = p:1300
		}
		# owns = 1141
		OWNER = {
			NOT = { country_culture_group  = orcs_group }
			NOT = { religion  = melkorism }
		}
	}
	immediate = {
	}
	option = {
		name = "OK"
		switch = {
			trigger = this
			p:1141 = { #barad dur
				trigger_event = {
					id = lotr_teardown_events.2
				}
			}
			p:1021 = { #black gate
				trigger_event = {
					id = lotr_teardown_events.3
				}
			}
			p:1030 = { #minas morgul
				trigger_event = {
					id = lotr_teardown_events.4
				}
			}
			p:1105 = { #dol guldur
				trigger_event = {
					id = lotr_teardown_events.5
				}
			}
			p:1300 = { #minas dur
				trigger_event = {
					id = lotr_teardown_events.6
				}
			}
		}
	}
}

#barad dur
lotr_teardown_events.2 = {
	type = province_event
	title = lotr_teardown_events.2.t
	desc = lotr_teardown_events.2.desc
	picture = event_barad_dur_destroyed

	trigger = {
		NOT = { has_global_variable = ring_destroyed }
		has_province_modifier = barad_dur_modifier
	}

	option = {
		name = lotr_teardown_events.2.a
		destroy_barad_dur_effect = yes
		OWNER = {
			current_ruler = { add_popularity = popularity_medium }
			add_stability = 5
		}
		every_country = {
			limit = {
				NOT = { THIS = PREV.OWNER }
				NOT = { THIS = ROOT }
			}
			trigger_event = { id = lotr_frodos_mission_events.95 days = 30 } #players are told
		}
		ai_chance = { factor = 95 }
	}
	option = {
		name = lotr_teardown_events.2.b
		OWNER = {
			current_ruler = {
				add_corruption = 20
				set_character_religion = melkorism
			}
			set_country_religion = melkorism
			save_scope_as = convert
		}
		every_country = {
			limit = {
				NOT = { religion = melkorism }
			}
			trigger_event = { id = br_sauron.10 days = 30 } #players are told this ruler has turned to Melkor
		}
		ai_chance = { 
			factor = 5 
			modifier = {
				factor = 10
				OWNER = {
					religion = eastern_animism
				}
			}
		}
	}
}
#black gate 
lotr_teardown_events.3 = {
	type = province_event
	title = lotr_teardown_events.3.t
	desc = lotr_teardown_events.3.desc
	picture = event_black_gate_destroyed

	trigger = {
		NOT = { has_global_variable = ring_destroyed }
		has_province_modifier = black_gate_modifier
	}

	option = {
		name = lotr_teardown_events.2.a
		destroy_black_gate_effect = yes
		OWNER = {
			current_ruler = { add_popularity = popularity_medium }
			add_stability = 5
		}
		every_country = {
			limit = {
				NOT = { THIS = PREV.OWNER }
				NOT = { THIS = ROOT }
			}
			trigger_event = { id = lotr_frodos_mission_events.96 days = 30 } #players are told
		}
		ai_chance = { factor = 95 }
	}
	option = {
		name = lotr_teardown_events.2.b
		OWNER = {
			current_ruler = {
				add_corruption = 20
				set_character_religion = melkorism
			}
			set_country_religion = melkorism
			save_scope_as = convert
		}
		every_country = {
			limit = {
				NOT = { religion = melkorism }
			}
			trigger_event = { id = br_sauron.10 days = 30 } #players are told this ruler has turned to Melkor
		}
		ai_chance = { 
			factor = 5 
			modifier = {
				factor = 10
				OWNER = {
					religion = eastern_animism
				}
			}
		}
	}
}
#minas morgul 
lotr_teardown_events.4 = {
	type = province_event
	title = lotr_teardown_events.4.t
	desc = lotr_teardown_events.4.desc
	picture = event_minasMorgul

	trigger = {
		has_province_modifier = minas_ithil_modifier
	}

	option = {
		name = lotr_teardown_events.2.a
		remove_province_modifier = minas_ithil_modifier
		remove_province_modifier = supplied_from_the_rear
		while = {
			count = num_of_fortress_building
			remove_building_level = fortress_building
		}
		if = {
			limit = { has_city_status = yes }
			set_city_status = settlement
		}
		OWNER = {
			current_ruler = { add_popularity = popularity_medium }
			add_stability = 5
		}
		hidden_effect = {
			if = {
				limit = {
					is_model_shown = "black_wall"
				}
				hide_model = "black_wall"
			}
			p:1031 = {
				if = {
					limit = {
						is_model_shown = "wonder_minas_morgul"
					}
					hide_model = "wonder_minas_morgul"
				}
			}
			add_city_fire_effect = yes
		}
		ai_chance = { factor = 95 }
	}
	option = {
		name = lotr_teardown_events.2.b
		OWNER = {
			current_ruler = {
				add_corruption = 20
				set_character_religion = melkorism
			}
			set_country_religion = melkorism
			save_scope_as = convert
		}
		every_country = {
			limit = {
				NOT = { religion = melkorism }
			}
			trigger_event = { id = br_sauron.10 days = 30 } #players are told this ruler has turned to Melkor
		}
		ai_chance = { 
			factor = 5 
			modifier = {
				factor = 10
				OWNER = {
					religion = eastern_animism
				}
			}
		}
	}
}
#dol guldur 
lotr_teardown_events.5 = {
	type = province_event
	title = lotr_teardown_events.5.t
	desc = lotr_teardown_events.5.desc
	picture = event_destruction_dol_guldur

	trigger = {
		has_province_modifier = dol_guldur_modifier
	}

	option = {
		name = lotr_teardown_events.2.a
		remove_province_modifier = dol_guldur_modifier
		while = {
			count = num_of_fortress_building
			remove_building_level = fortress_building
		}
		state = {
			remove_state_modifier = dol_guldur_state_modifier
		}
		if = {
			limit = { has_city_status = yes }
			set_city_status = settlement
		}
		OWNER = {
			current_ruler = { add_popularity = popularity_medium }
			add_stability = 5
		}
		hidden_effect = {
			add_city_fire_effect = yes
		}
		ai_chance = { factor = 95 }
	}
	option = {
		name = lotr_teardown_events.2.b
		OWNER = {
			current_ruler = {
				add_corruption = 20
				set_character_religion = melkorism
			}
			set_country_religion = melkorism
			save_scope_as = convert
		}
		every_country = {
			limit = {
				NOT = { religion = melkorism }
			}
			trigger_event = { id = br_sauron.10 days = 30 } #players are told this ruler has turned to Melkor
		}
		ai_chance = { 
			factor = 5 
			modifier = {
				factor = 10
				OWNER = {
					religion = eastern_animism
				}
			}
		}
	}
}

#minas dur (tirith corrupted)
lotr_teardown_events.6 = {
	type = province_event
	title = lotr_teardown_events.6.t
	desc = lotr_teardown_events.6.desc
	picture = event_minas_tirith_attacked

	trigger = {
		has_province_modifier = minas_anor_corrupted_modifier
	}

	immediate = {
		remove_province_modifier = minas_anor_corrupted_modifier
	}

	option = {
		name = lotr_teardown_events.2.a
		while = {
			count = num_of_fortress_building
			remove_building_level = fortress_building
		}
		state = {
			remove_state_modifier = minas_anor_state_modifier
		}
		if = {
			limit = { has_city_status = yes }
			set_city_status = settlement
		}
		OWNER = {
			current_ruler = { add_popularity = popularity_medium }
			add_stability = 5
		}
		hidden_effect = {
			add_city_fire_effect = yes
			p:4126 = {
				if = {
					limit = {
						is_model_shown = "wonder_minas_dur"
					}
					hide_model = "wonder_minas_dur"
				}
			}
		}
		ai_chance = { factor = 0 }
	}
	option = {
		name = lotr_teardown_events.6.b
		custom_tooltip = lotr_teardown_events.6.b.tt
		ai_chance = { 
			factor = 0
		}
	}
	option = {
		name = lotr_teardown_events.6.c
		trigger = { owner = { is_ai = yes } }
		add_permanent_province_modifier = {
			name = minas_anor_modifier
			duration = -1
		}
		p:4126 = {
			if = {
				limit = {
					is_model_shown = "wonder_minas_dur"
				}
				hide_model = "wonder_minas_dur"
			}
		}
		change_province_name = "Minas Tirith"
		show_model = "wonder_minas_tirith"
		ai_chance = { 
			factor = 50
		}
	}
}


lotr_teardown_events.10 = {
	type = province_event
	title = "OK"
	desc = "OK"
	hidden = yes
	trigger = {
		exists = owner 
		OR = {
			this = p:1300
		}
		# owns = 1141
		OWNER = {
			country_culture_group  = orcs_group
		}
	}
	immediate = {
	}
	option = {
		name = "OK"
		switch = {
			trigger = this
			p:1300 = { #minas tirith
				trigger_event = {
					id = lotr_teardown_events.11
				}
			}
		}
	}
}

#minas tirith
lotr_teardown_events.11 = {
	type = province_event
	title = lotr_teardown_events.11.t
	desc = lotr_teardown_events.11.desc
	picture = event_minas_tirith_attacked

	trigger = {
 		has_province_modifier = minas_anor_modifier
	}

	immediate = {
		remove_province_modifier = minas_anor_modifier
	}

	option = {
		name = lotr_teardown_events.2.a
		while = {
			count = num_of_fortress_building
			remove_building_level = fortress_building
		}
		state = {
			remove_state_modifier = minas_anor_state_modifier
		}
		if = {
			limit = { has_city_status = yes }
			set_city_status = settlement
		}
		OWNER = {
			current_ruler = { add_popularity = popularity_medium }
			add_stability = 5
		}
		hidden_effect = {
			add_city_fire_effect = yes
			if = {
				limit = {
					is_model_shown = "wonder_minas_tirith"
				}
				hide_model = "wonder_minas_tirith"
			}
		}
		ai_chance = { factor = 0 }
	}
	option = {
		name = lotr_teardown_events.11.b
		custom_tooltip = lotr_teardown_events.11.b.tt
		ai_chance = { 
			factor = 0
		}
	}
	option = {
		name = lotr_teardown_events.11.c
		trigger = { owner = { is_ai = yes } }
		add_permanent_province_modifier = {
			name = minas_anor_corrupted_modifier
			duration = -1
		}
		if = {
			limit = {
				is_model_shown = "wonder_minas_tirith"
			}
			hide_model = "wonder_minas_tirith"
		}
		change_province_name = "Minas-dûr"
		p:4126 = {
			show_model = "wonder_minas_dur"
		}
		ai_chance = { 
			factor = 50
		}
	}
}
