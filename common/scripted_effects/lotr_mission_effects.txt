mordor_mortal_enemies = {
	if = {
		limit = { NOT = { THIS = c:MOR } }
    add_opinion = {
      target = c:MOR
      modifier = mortal_enemies
    }
    c:MOR = {
      add_opinion = {
        target = PREV
        modifier = mortal_enemies
      }
    }
	}
}

remove_existing_sauron_fury = {
	if = {
		limit = { has_country_modifier = fury_of_sauron_5 }
		remove_country_modifier = fury_of_sauron_5
	}
	if = {
		limit = { has_country_modifier = fury_of_sauron_4 }
		remove_country_modifier = fury_of_sauron_4
	}
	if = {
		limit = { has_country_modifier = fury_of_sauron_3 }
		remove_country_modifier = fury_of_sauron_3
	}
	if = {
		limit = { has_country_modifier = fury_of_sauron_2 }
		remove_country_modifier = fury_of_sauron_2
	}
	if = {
		limit = { has_country_modifier = fury_of_sauron_1 }
		remove_country_modifier = fury_of_sauron_1
	}
	if = {
		limit = { has_country_modifier = fury_of_sauron_0 }
		remove_country_modifier = fury_of_sauron_0
	}
	if = {
		limit = { has_country_modifier = whips_of_sauron }
		remove_country_modifier = whips_of_sauron
	}
	if = {
		limit = { has_country_modifier = whips_of_saruman }
		remove_country_modifier = whips_of_saruman
	}
}


frodo_to_ithilien = {
  every_in_list = {
    list = frodoSam
    if = {
      limit = {
        exists = c:ROI
        c:ROI = { has_land = yes }
      }
      move_country = c:ROI
    }
    else = { #todo: possibly already move to mordor here
      move_country = scope:frodo_protector_country
    }
  }
}

gandalf_to_gondor = {
  every_in_list = {
    list = fellowshipToGondor
    if = {
      limit = {
        exists = c:GON
        c:GON = { has_land = yes }
      }
      move_country = c:GON
    }
    else = {
      move_country = scope:frodo_protector_country
    }
  }
}

destroy_barad_dur_effect = {
  remove_province_modifier = barad_dur_modifier
  remove_building_level = fortress_building
  if = {
    limit = { has_city_status = yes }
    set_city_status = settlement
  }
  hidden_effect = {
    if = {
      limit = {
        is_model_shown = "wonder_barad_dur"
      }
      hide_model = "wonder_barad_dur"
    }
    add_city_fire_effect = yes
    p:1140 = {
      show_model = "wonder_barad_dur_rubble"
    }
  }
}

destroy_black_gate_effect = {
  remove_province_modifier = black_gate_modifier
  remove_building_level = fortress_building
  if = {
    limit = { has_city_status = yes }
    set_city_status = settlement
  }
  hidden_effect = {
    if = {
      limit = {
        is_model_shown = "the_black_gate"
      }
      hide_model = "the_black_gate"
    }
    add_city_fire_effect = yes
  }
}

kill_sauron_nazgul = {
	char:3 = {
		death = {
			death_reason = death_freak_accident
		}
	}
	char:4 = {
		death = {
			death_reason = death_freak_accident
		}
	}
	char:5 = {
		death = {
			death_reason = death_freak_accident
		}
	}
	char:6 = {
		death = {
			death_reason = death_freak_accident
		}
	}
	char:7 = {
		death = {
			death_reason = death_freak_accident
		}
	}
	char:8 = {
		death = {
			death_reason = death_freak_accident
		}
	}
	char:9 = {
		death = {
			death_reason = death_freak_accident
		}
	}
	char:10 = {
		death = {
			death_reason = death_freak_accident
		}
	}
	char:11 = {
		death = {
			death_reason = death_freak_accident
		}
	}
	char:12 = {
		death = {
			death_reason = death_freak_accident
		}
	}
}

declare_war_with_potential_truce = {
  save_scope_as = attacker
  if = {
    limit = {
      has_truce_with =  $TARGET$
    }
    set_local_variable = {
      name = had_truce
    }
    add_stability = 25
  }
  declare_war_with_wargoal = {
    war_goal = imperial_conquest_wargoal
    target = $TARGET$
  }
  if = {
    limit = {
      has_local_variable = had_truce
    }
    add_stability = 25
    add_war_exhaustion = -1
    add_aggressive_expansion = -25
  }
  every_current_war = {
    save_scope_as = targetWar
    PREV = {
		  every_subject = {
		    limit = {
					save_temporary_scope_as = temp_subject_war_scope
					scope:targetWar = {
						NOR = {
							any_war_attacker = { this = scope:temp_subject_war_scope }
							any_war_defender = { this = scope:temp_subject_war_scope }
						}
					}
		      NOR = {
		        is_subject_type = tributary
		        is_subject_type = vassal_tribe
		      }
		      has_subject_loyalty >= 33
		    }
		    add_to_war = {
		      target = scope:targetWar
		      attacker = yes
		    }
		  }
    }
  }
}

declare_war_against_orcs = {
  declare_war_with_wargoal = {
    war_goal = orc_wargoal
    target = $TARGET$
  }
  hidden_effect = {
    random_current_war = {
      # limit = { #this somehow fails, but since condition for this war is being at peace before, random war will always be the right one
      #   any_war_defender = { this = $TARGET$ }
      # }
      save_scope_as = targetWar
    }
    if = { 
      limit = { exists = targetWar }
      every_subject = {
        limit = {
          NOR = {
            is_subject_type = tributary
            is_subject_type = vassal_tribe
          }
          has_subject_loyalty >= 33
        }
        add_to_war = {
          target = scope:targetWar
          attacker = yes
        }
      }
    }
  }
}