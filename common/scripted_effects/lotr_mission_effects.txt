mordor_mortal_enemies = {
	if = {
		limit = { NOT = { THIS = c:MOR } }
    add_opinion = {
      target = c:MOR
      modifier = mortal_enemies
    }
    c:MOR = {
      add_opinion = {
        target = PREV
        modifier = mortal_enemies
      }
    }
	}
}

remove_existing_sauron_fury = {
	if = {
		limit = { has_country_modifier = fury_of_sauron_5 }
		remove_country_modifier = fury_of_sauron_5
	}
	if = {
		limit = { has_country_modifier = fury_of_sauron_4 }
		remove_country_modifier = fury_of_sauron_4
	}
	if = {
		limit = { has_country_modifier = fury_of_sauron_3 }
		remove_country_modifier = fury_of_sauron_3
	}
	if = {
		limit = { has_country_modifier = fury_of_sauron_2 }
		remove_country_modifier = fury_of_sauron_2
	}
	if = {
		limit = { has_country_modifier = fury_of_sauron_1 }
		remove_country_modifier = fury_of_sauron_1
	}
	if = {
		limit = { has_country_modifier = fury_of_sauron_0 }
		remove_country_modifier = fury_of_sauron_0
	}
	if = {
		limit = { has_country_modifier = whips_of_sauron }
		remove_country_modifier = whips_of_sauron
	}
	if = {
		limit = { has_country_modifier = whips_of_saruman }
		remove_country_modifier = whips_of_saruman
	}
}


frodo_to_ithilien = {
  every_in_list = {
    list = frodoSam
    if = {
      limit = {
        exists = c:ROI
        c:ROI = { has_land = yes }
      }
      move_country = c:ROI
    }
    else = { #todo: possibly already move to mordor here
      move_country = scope:frodo_protector_country
    }
  }
}

other_to_rohan = {
  every_in_list = {
    list = fellowshipToGondor
    if = {
      limit = {
        exists = c:ROH
        c:ROH = { has_land = yes }
      }
      move_country = c:ROH
    }
    else = {
      move_country = scope:frodo_protector_country
    }
  }
  every_in_list = {
    list = fellowshipStayRohan
    if = {
      limit = {
        exists = c:ROH
        c:ROH = { has_land = yes }
      }
      move_country = c:ROH
    }
    else = {
      move_country = scope:frodo_protector_country
    }
  }
}

gandalf_to_gondor = {
  every_in_list = {
    list = fellowshipToGondor
    if = {
      limit = {
        exists = c:GON
        c:GON = { has_land = yes }
      }
      move_country = c:GON
    }
    else = {
      move_country = scope:frodo_protector_country
    }
  }
}

destroy_barad_dur_effect = {
  remove_province_modifier = barad_dur_modifier
  while = {
    count = num_of_fortress_building
    remove_building_level = fortress_building
  }
  state = {
    remove_state_modifier = barad_dur_state_modifier
  }
  if = {
    limit = { has_city_status = yes }
    set_city_status = settlement
  }
  hidden_effect = {
    if = {
      limit = {
        is_model_shown = "wonder_barad_dur"
      }
      hide_model = "wonder_barad_dur"
    }
    add_city_fire_effect = yes
    p:1140 = {
      show_model = "wonder_barad_dur_rubble"
    }
  }
}

destroy_black_gate_effect = {
  remove_province_modifier = black_gate_modifier
  remove_province_modifier = supplied_from_the_rear
  while = {
    count = num_of_fortress_building
    remove_building_level = fortress_building
  }
  state = {
    remove_state_modifier = black_gate_state_modifier
  }
  if = {
    limit = { has_city_status = yes }
    set_city_status = settlement
  }
  hidden_effect = {
    if = {
      limit = {
        is_model_shown = "the_black_gate"
      }
      hide_model = "the_black_gate"
    }
    add_city_fire_effect = yes
  }
}

kill_sauron_nazgul = {
	char:3 = {
		death = {
			death_reason = death_freak_accident
		}
	}
	char:4 = {
		death = {
			death_reason = death_freak_accident
		}
	}
	char:5 = {
		death = {
			death_reason = death_freak_accident
		}
	}
	char:6 = {
		death = {
			death_reason = death_freak_accident
		}
	}
	char:7 = {
		death = {
			death_reason = death_freak_accident
		}
	}
	char:8 = {
		death = {
			death_reason = death_freak_accident
		}
	}
	char:9 = {
		death = {
			death_reason = death_freak_accident
		}
	}
	char:10 = {
		death = {
			death_reason = death_freak_accident
		}
	}
	char:11 = {
		death = {
			death_reason = death_freak_accident
		}
	}
	char:12 = {
		death = {
			death_reason = death_freak_accident
		}
	}
}

declare_war_with_potential_truce = {
  save_scope_as = attacker
  if = {
    limit = {
      has_truce_with =  $TARGET$
    }
    set_local_variable = {
      name = had_truce
    }
    add_stability = 25
  }
  declare_war_with_wargoal = {
    war_goal = imperial_conquest_wargoal
    target = $TARGET$
  }
  if = {
    limit = {
      has_local_variable = had_truce
    }
    add_stability = 25
    add_war_exhaustion = -1
    add_aggressive_expansion = -25
  }
  every_current_war = {
    save_scope_as = targetWar
    PREV = {
		  every_subject = {
		    limit = {
					save_temporary_scope_as = temp_subject_war_scope
					scope:targetWar = {
						NOR = {
							any_war_attacker = { this = scope:temp_subject_war_scope }
							any_war_defender = { this = scope:temp_subject_war_scope }
						}
					}
		      NOR = {
		        is_subject_type = tributary
		        is_subject_type = vassal_tribe
		      }
		      has_subject_loyalty >= 33
		    }
		    add_to_war = {
		      target = scope:targetWar
		      attacker = yes
		    }
		  }
    }
  }
}

declare_war_against_orcs = {
  declare_war_with_wargoal = {
    war_goal = orc_wargoal
    target = $TARGET$
  }
  hidden_effect = {
    random_current_war = {
      # limit = { #this somehow fails, but since condition for this war is being at peace before, random war will always be the right one
      #   any_war_defender = { this = $TARGET$ }
      # }
      save_scope_as = targetWar
    }
    if = { 
      limit = { exists = scope:targetWar }
      every_subject = {
        limit = {
          NOR = {
            is_subject_type = tributary
            is_subject_type = vassal_tribe
          }
          has_subject_loyalty >= 33
        }
        add_to_war = {
          target = scope:targetWar
          attacker = yes
        }
      }
    }
  }
}

gandalf_the_white = {
  hidden_effect = {
    c:SHI = {
      create_character = {
        first_name="Gandalf"
        family_name="the White"
        age=2800
        culture="maia"
        religion="iluvatarism"
        no_stats=yes
        add_martial=20
        add_charisma=25
        add_finesse=25
        add_zeal=25
        no_traits=yes
        force_add_trait="maia"
        force_add_trait="olympic_competitor"
        save_scope_as = gandalf
        dna="AAAH7oppimkAAAAAAp0CnQJ4AngCfwJ/AnYCdgKYApgCiwKLAlYCVgJ3AncCkwKTApcClwKXApcCiwKLAoECgQKLAosCTgJOAm0CbQKTApMCXgJeAmcCZwJWAlYCfwJ/AowCjAKaApoCdgJ2ApICkgKRApECkAKQAmwCbAKJAokCdQJ1ApUClQKeAp4CdAJ0ArACsAKUApQCcwJzAnYCdgKLAosCjAKMAn0CfQKTApMCjAKMAmECYQKMAowClQKVAo8CjwKLAosChgKGAnkCeQJRAlECbQJtAlkCWQKYApgCkwKTAsICwgQEBAQBZQFlATMBMwFhAWEATwBPAVABUAC2ALYALwAvAIcAhwCpAKkEnAScArYCtgFzAXMABwAHAN0A3QFpAWkAPwA/Aq8CrwCxALEDtwO3ARsBGwD5APkCngKeAQMBAwKVApUAOgA6AHwAfABIAEgAwwDDACYAJgD5APkCiAKIA3ADcAD0APQH6QDEAH8AfwQ3BDcWXhZeAPAA8Az+DP4QgxAXEf8R0AAAAAAAAAAAAAAAAAAAAAA="
        add_to_list = fellowshipToGondor
        add_to_list = fellowship
      }
      scope:gandalf = {
        set_variable = {
          name = gandalf_flag
        }
      }
    }
  }
}

count_religions = {
  set_local_variable = { name = melkor_pops value = 0 }
  set_local_variable = { name = eru_pops value = 0 }
  set_local_variable = { name = ritual_pops value = 0 }
  set_local_variable = { name = total_pops value = 0 }
  every_owned_province = {
    change_local_variable = {
      name = total_pops
      add = total_population
    }
    every_pops_in_province = {
      if = {
        limit = {
          pop_religion = melkorism
          }
        change_local_variable = { 
          name = melkor_pops
          add = 1
        }
      }
      else_if = {
        limit = {
          pop_religion = iluvatarism
          }
        change_local_variable = { 
          name = eru_pops
          add = 1
        }
      }
      else
      {
        change_local_variable = { 
          name = ritual_pops
          add = 1
        }
      }
    }
  }
  set_variable = {
    name = melkor_pop_fraction
    value = local_var:melkor_pops
  }
  change_variable = {
    name = melkor_pop_fraction
    divide = local_var:total_pops
  }
  set_variable = {
    name = eru_pop_fraction
    value = local_var:eru_pops
  }
  change_variable = {
    name = eru_pop_fraction
    divide = local_var:total_pops
  }
  set_variable = {
    name = ritual_pop_fraction
    value = local_var:ritual_pops
  }
  change_variable = {
    name = ritual_pop_fraction
    divide = local_var:total_pops
  }
  set_variable = {
    name = eru_vs_melkor_pop_chance
    value = local_var:eru_pops
  }
  if = {
    limit = {
      local_var:melkor_pops > 0
    }
    change_variable = {
      name = eru_vs_melkor_pop_chance
      divide = local_var:melkor_pops
    }
  }
  set_variable = {
    name = ritual_vs_melkor_pop_chance
    value = local_var:ritual_pops
  }
  change_variable = {
    name = ritual_vs_melkor_pop_chance
    divide = local_var:melkor_pops
  }
  if = {
    limit = {
      local_var:melkor_pops > 0
    }
    change_variable = {
      name = ritual_vs_melkor_pop_chance
      divide = local_var:melkor_pops
    }
  }
}


change_religion_effect_lotr = {
  custom_tooltip = religion_conversion_tooltip
  custom_tooltip = religion_conversion_family_tooltip
  if = {
    limit = { 
      is_republic = yes
      has_party_type = traditionalist_party
    }
    add_party_approval = {
      party_type = traditionalist_party
      value = -10
    }
  }
  if = {
    limit = { 
      is_republic = yes
      has_party_type = boni_party
    }
    add_party_approval = {
      party_type = boni_party
      value = -10
    }
  }
  add_political_influence = -200
  add_stability = -30
  add_country_modifier = {
    name = "recent_convert_modifier"
    duration = 3650
  }
  set_country_religion = $RELIGION$
  current_ruler = {
    if = {
      limit = {
        NOT = { has_religion = $RELIGION$ }
      }
      set_character_religion = $RELIGION$
    }
  }
  hidden_effect = {
    current_ruler.family = {
      every_family_member = {
        limit = {
          employer = ROOT
          loyalty >= 40
          NOT = { has_religion = $RELIGION$ }
        }
        set_character_religion = $RELIGION$
      }
    }
  }
  every_character = {
    limit = {
      loyalty >= 50
      NOT = { has_religion = $RELIGION$ }
      is_ruler = no
      from_ruler_family = no
    }
    set_character_religion = $RELIGION$
  }
  hidden_effect = {
    every_character = {
      limit = { NOT = { has_same_religion_as = employer.current_ruler } }
      add_loyalty = national_conversion_l
    }
  }
  if = {
    limit = {
      has_senate_approval < 60
      is_republic = yes
      NOT = { has_variable = dictatorship_enabled }
    }
    add_tyranny = {
      # Calculates the percentage of disapproval
      value = 0.6 # -- SENATE_REQUIRED_APPROVAL_WITHOUT_PENALTIES
      subtract = has_senate_approval
      divide = 0.3 # -- SENATE_REQUIRED_APPROVAL
      
      # This is the real value that you want for 100% of the effect
      multiply = 20
    }
  }
}

clear_melkor_opinions = {
  every_country = {
    limit = { 
      NOT = { this = ROOT }
      has_opinion = { 
        modifier = mortal_enemies
        target = ROOT
      }
    }
    remove_opinion = { 
      modifier = mortal_enemies
      target = ROOT
    }
  }
  every_country = {
    limit = {
      NOT = { this = ROOT }
      PREV = {
        has_opinion = { 
          modifier = mortal_enemies
          target = PREV
        }
      }
    }
    PREV = {
      remove_opinion = { 
        modifier = mortal_enemies
        target = PREV
      }
    }
  }
  if = {
    limit = {
      has_opinion = { 
        modifier = sauron_worship_modifier
        target = c:MOR
      }
    }
    remove_opinion = { 
      modifier = sauron_worship_modifier
      target = c:MOR
    }
  }
}