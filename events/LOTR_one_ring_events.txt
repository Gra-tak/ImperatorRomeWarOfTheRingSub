namespace = lotr_one_ring_events

#The Ring is found by country that has occupied the shire
lotr_one_ring_events.1 = {
    type = country_event
    title = "lotr_one_ring_events.1.t"
    desc = "lotr_one_ring_events.1.desc"
    picture = event_one_ring_held

    left_portrait = current_ruler
    right_portrait = char:3

	trigger = {
		is_ai = no
		NOT = { tag = SHI }
		p:1621 = { #michel delving
			exists = owner
			owner = ROOT
		}
		NOT = {
			any_country_treasure = {
				this = treasure:lotr_treasure_one_ring
			}
		}
		NOT = { has_global_variable = ring_destroyed }
		NOT = { has_global_variable = frodo_protector_country_global }
	}
	
	immediate = {
	}
	option = {
		name = "lotr_one_ring_events.1.a"
		treasure:lotr_treasure_one_ring = {
			transfer_treasure_to_country = ROOT
		}
		apply_one_ring_to_ruler = yes
	}
	option = {
		name = "lotr_one_ring_events.1.b"
		trigger = {
			NOT = { religion = melkorism }
			OR = {
				c:SHI = { has_land = yes }
				any_owned_province = {
		      province_dominant_culture_group = halfling_group 
      		is_in_region = siragale_region
				}
			}
		}
		custom_tooltip = "frodo_mission_hint_tooltip"
		ring_to_shire_effect = yes
	}
}

#Rings power given to ruler of nation with ring treasure
lotr_one_ring_events.2 = {
    type = country_event
    title = "lotr_one_ring_events.1.t"
    desc = "lotr_one_ring_events.1.desc"
    picture = event_one_ring_held
    left_portrait = current_ruler
    right_portrait = char:3
	trigger = {
		NOT = { tag = SHI }
		exists = treasure:lotr_treasure_one_ring
		ROOT = {
			any_country_treasure = {
				this = treasure:lotr_treasure_one_ring
			}
			current_ruler = {
				NOT = {
					has_character_modifier = owns_one_ring_modifier
				}
			}
		}
	}
	
	option = {
		name = "lotr_one_ring_events.2.a"
		remove_one_ring_from_previous_owner = yes
		apply_one_ring_to_ruler = yes
	}
	option = {
		name = "lotr_one_ring_events.2.b"
		trigger = {
			NOT = { religion = melkorism }
			OR = {
				c:SHI = { has_land = yes }
				any_owned_province = {
		      province_dominant_culture_group = halfling_group 
      		is_in_region = siragale_region
				}
			}
		}
		remove_one_ring_from_previous_owner = yes
		ring_to_shire_effect = yes
	}
}

#Rings corrupts bearer
lotr_one_ring_events.6 = {
    type = country_event
    title = "lotr_one_ring_events.6.t"
    desc = "lotr_one_ring_events.6.desc"
    picture = event_one_ring_held
    left_portrait = current_ruler
    right_portrait = char:3
	trigger = {
		NOT = { religion = melkorism }
		current_ruler = { 
			has_character_modifier = owns_one_ring_modifier 
			corruption >= 99
		}
	}
	
	option = {
		name = "lotr_one_ring_events.6.a"
		set_country_religion = melkorism
		current_ruler = {
			set_character_religion = melkorism
		}
	}
	option = {
		name = "lotr_one_ring_events.6.b"
		trigger = {
			OR = {
				c:SHI = { has_land = yes }
				any_owned_province = {
		      province_dominant_culture_group = halfling_group 
      		is_in_region = siragale_region
				}
			}
		}
		remove_one_ring_from_previous_owner = yes
		add_stability = -50
		current_ruler = {
			add_health = -75
		}
		ring_to_shire_effect = yes
	}
}

#One Ring Decisions
lotr_one_ring_events.3 = {
    type = country_event
    title = "lotr_one_ring_events.3.t"
    desc = "lotr_one_ring_events.3.desc"
    picture = event_one_ring_held
    left_portrait = current_ruler
    right_portrait = char:3
	immediate = {
		set_variable = {
			name = lotr_one_ring_events3_variable
			days = 365
		}
	}
	
	option = { # Exit
		name = "lotr_one_ring_events.3.a"
		custom_tooltip = "lotr_one_ring_events.3.a.tt"
		ai_chance = {
			base = 100
		}
	}
	
	option = { # Give ring back to Sauron
		name = "lotr_one_ring_events.3.b"
		custom_tooltip = "lotr_one_ring_events.3.b.tt"
		trigger = {
			NOT = {
				tag = MOR
			}
			sauron_rules = yes
			religion = melkorism
		}
		remove_one_ring_from_previous_owner = yes
		treasure:lotr_treasure_one_ring = {
			transfer_treasure_to_country = c:MOR
		}
		c:MOR = {
			apply_one_ring_to_ruler = yes
		}
		current_ruler = {
			add_health = -50
		}
	}
	
	option = { # Own Mount Doom destroy Ring
		name = "lotr_one_ring_events.3.c"
		custom_tooltip = "lotr_one_ring_events.3.c.tt"
		trigger = {
			exists = treasure:lotr_treasure_one_ring
			owns_or_subject_owns = 1140
		}
		ring_destroyed_effect = yes
		current_ruler = {
			add_health = -30
		}
	}
	
	option = { # Carry ring to Mount Doom
		name = "lotr_one_ring_events.3.d"
		custom_tooltip = "lotr_one_ring_events.3.d.tt"
		trigger = {
			exists = treasure:lotr_treasure_one_ring
			current_ruler = {
				is_at_location = 1140
			}
			war = yes
			OR = {
				p:1140 = {
					has_owner = no
				}
				any_countries_at_war_with = { this = p:1140.owner }
			}
		}
		ring_destroyed_effect = yes
		current_ruler = {
			add_health = -50
		}
		every_country = {
			limit = {
				NOT = { religion = melkorism }
			}
			trigger_event = { id = lotr_one_ring_events.4 days = 7 } #goodies are told Sauron is dead
		}
		every_country = {
			limit = {
				religion = melkorism
			}
			trigger_event = { id = lotr_one_ring_events.5 days = 7 } #baddies are told Sauron is dead
		}
		trigger_event = { id = lotr_one_ring_events.4 days = 7 } #goodies are told Sauron is dead
	}
	
	option = { # Become a servant of Darkness
		name = "lotr_one_ring_events.3.e"
		custom_tooltip = "lotr_one_ring_events.3.e.tt"
		trigger = {
			exists = treasure:lotr_treasure_one_ring
			current_ruler = {
				corruption >= 40
			}
			NOT = { religion = melkorism }
		}
		current_ruler = {
			set_character_religion = melkorism
		}
		set_country_religion = melkorism
	}
	option = {
		name = "lotr_one_ring_events.6.b"
		trigger = {
			NOT = { religion = melkorism }
			OR = {
				c:SHI = { has_land = yes }
				any_owned_province = {
		      province_dominant_culture_group = halfling_group 
      		is_in_region = siragale_region
				}
			}
		}
		remove_one_ring_from_previous_owner = yes
		add_stability = -50
		current_ruler = {
			add_health = -75
		}
		ring_to_shire_effect = yes
	}
	
}

lotr_one_ring_events.4 = {
	
	type = country_event
	title = "lotr_one_ring_events.4.t"
	desc = "lotr_one_ring_events.4.desc"
	picture = event_dale
	goto_location = root
	
	trigger = {
		always = yes
	}
	
	
	immediate = {
	}
	
	option = {
		name = "lotr_one_ring_events.4.a"
	}

	option = {
		name = "lotr_one_ring_events.4.b"
	}
			
}

lotr_one_ring_events.5 = {
	
	type = country_event
	title = "lotr_one_ring_events.5.t"
	desc = "lotr_one_ring_events.5.desc"
	picture = event_barad_dur
	goto_location = root
	
	trigger = {
		always = yes
	}
	
	
	immediate = {
	}
	
	option = {
		name = "lotr_one_ring_events.5.a"
	}

	option = {
		name = "lotr_one_ring_events.5.b"
	}
			
}
